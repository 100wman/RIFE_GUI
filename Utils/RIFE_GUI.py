# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RIFE_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class MyLineWidget(QtWidgets.QLineEdit):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setAcceptDrops(True)

    def dragEnterEvent(self, e):
        if e.mimeData().hasText():  # 是否文本文件格式
            url = e.mimeData().urls()[0]
            self.setText(url.toLocalFile())
        else:
            e.ignore()


class MyListWidget(QtWidgets.QListWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setAcceptDrops(True)

    def dropEvent(self, e):
        if e.mimeData().hasText():  # 是否文本文件格式
            self.clear()
            for url in e.mimeData().urls():
                self.addItem(url.toLocalFile())
        else:
            e.ignore()

    def dragEnterEvent(self, e):
        if e.mimeData().hasText():  # 是否文本文件格式
            self.clear()
            for url in e.mimeData().urls():
                self.addItem(url.toLocalFile())
        else:
            e.ignore()

    def get_items(self):
        widgetres = []
        # 获取listwidget中条目数
        count = self.count()
        # 遍历listwidget中的内容
        for i in range(count):
            widgetres.append(self.item(i).text())
        return widgetres


class MyTextWidget(QtWidgets.QTextEdit):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setAcceptDrops(True)

    def dropEvent(self, event):
        try:
            if event.mimeData().hasUrls:
                url = event.mimeData().urls()[0]
                # url_list = list()
                # url_list.append(self.toPlainText().strip(";"))
                # for url in event.mimeData().urls():
                #     url_list.append(f"{url.toLocalFile()}")
                # text = ""
                # for url in url_list:
                #     text += f"{url};"
                # text = text.strip(";")
                self.setText(f"{url.toLocalFile()}")
            else:
                event.ignore()
        except Exception as e:
            print(e)

class Ui_RIFEDialog(object):
    def setupUi(self, RIFEDialog):
        RIFEDialog.setObjectName("RIFEDialog")
        RIFEDialog.setWindowModality(QtCore.Qt.WindowModal)
        RIFEDialog.resize(1243, 999)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(RIFEDialog.sizePolicy().hasHeightForWidth())
        RIFEDialog.setSizePolicy(sizePolicy)
        RIFEDialog.setMinimumSize(QtCore.QSize(960, 720))
        RIFEDialog.setMaximumSize(QtCore.QSize(3840, 2160))
        icon = QtGui.QIcon.fromTheme("Frozen")
        RIFEDialog.setWindowIcon(icon)
        RIFEDialog.setWindowOpacity(13.0)
        self.gridLayout_23 = QtWidgets.QGridLayout(RIFEDialog)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.MainFrame = QtWidgets.QFrame(RIFEDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MainFrame.sizePolicy().hasHeightForWidth())
        self.MainFrame.setSizePolicy(sizePolicy)
        self.MainFrame.setObjectName("MainFrame")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.MainFrame)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.tabWidget = QtWidgets.QTabWidget(self.MainFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setObjectName("tabWidget")
        self.step1 = QtWidgets.QWidget()
        self.step1.setEnabled(True)
        self.step1.setObjectName("step1")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.step1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.OutputFolder = MyTextWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFolder.sizePolicy().hasHeightForWidth())
        self.OutputFolder.setSizePolicy(sizePolicy)
        self.OutputFolder.setObjectName("OutputFolder")
        self.gridLayout.addWidget(self.OutputFolder, 2, 0, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(self.step1)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1162, 633))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setScaledContents(True)
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.InputFileName = MyListWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFileName.sizePolicy().hasHeightForWidth())
        self.InputFileName.setSizePolicy(sizePolicy)
        self.InputFileName.setTabKeyNavigation(True)
        self.InputFileName.setDragEnabled(True)
        self.InputFileName.setDragDropOverwriteMode(True)
        self.InputFileName.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.InputFileName.setObjectName("InputFileName")
        self.gridLayout.addWidget(self.InputFileName, 1, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.InputButton = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputButton.sizePolicy().hasHeightForWidth())
        self.InputButton.setSizePolicy(sizePolicy)
        self.InputButton.setObjectName("InputButton")
        self.horizontalLayout_7.addWidget(self.InputButton)
        self.OutputButton = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputButton.sizePolicy().hasHeightForWidth())
        self.OutputButton.setSizePolicy(sizePolicy)
        self.OutputButton.setObjectName("OutputButton")
        self.horizontalLayout_7.addWidget(self.OutputButton)
        self.gridLayout_6.addLayout(self.horizontalLayout_7, 1, 0, 1, 1)
        self.AllInOne = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AllInOne.sizePolicy().hasHeightForWidth())
        self.AllInOne.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(28)
        self.AllInOne.setFont(font)
        self.AllInOne.setObjectName("AllInOne")
        self.gridLayout_6.addWidget(self.AllInOne, 2, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.InputFPSReminder = QtWidgets.QLabel(self.step1)
        self.InputFPSReminder.setObjectName("InputFPSReminder")
        self.horizontalLayout.addWidget(self.InputFPSReminder)
        self.InputFPS = MyLineWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFPS.sizePolicy().hasHeightForWidth())
        self.InputFPS.setSizePolicy(sizePolicy)
        self.InputFPS.setDragEnabled(True)
        self.InputFPS.setObjectName("InputFPS")
        self.horizontalLayout.addWidget(self.InputFPS)
        self.InterpExpReminder = QtWidgets.QLabel(self.step1)
        self.InterpExpReminder.setObjectName("InterpExpReminder")
        self.horizontalLayout.addWidget(self.InterpExpReminder)
        self.ExpSelecter = QtWidgets.QComboBox(self.step1)
        self.ExpSelecter.setObjectName("ExpSelecter")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.horizontalLayout.addWidget(self.ExpSelecter)
        self.OutputFPSReminder = QtWidgets.QLabel(self.step1)
        self.OutputFPSReminder.setObjectName("OutputFPSReminder")
        self.horizontalLayout.addWidget(self.OutputFPSReminder)
        self.OutputFPS = MyLineWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFPS.sizePolicy().hasHeightForWidth())
        self.OutputFPS.setSizePolicy(sizePolicy)
        self.OutputFPS.setDragEnabled(True)
        self.OutputFPS.setObjectName("OutputFPS")
        self.horizontalLayout.addWidget(self.OutputFPS)
        self.slowmotion = QtWidgets.QCheckBox(self.step1)
        self.slowmotion.setObjectName("slowmotion")
        self.horizontalLayout.addWidget(self.slowmotion)
        self.gridLayout_6.addLayout(self.horizontalLayout, 3, 0, 1, 1)
        self.tabWidget.addTab(self.step1, "")
        self.step2 = QtWidgets.QWidget()
        self.step2.setObjectName("step2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.step2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.groupBox_3 = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.StartFrame = MyLineWidget(self.groupBox_3)
        self.StartFrame.setObjectName("StartFrame")
        self.gridLayout_4.addWidget(self.StartFrame, 2, 2, 1, 1)
        self.AutoSet = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AutoSet.sizePolicy().hasHeightForWidth())
        self.AutoSet.setSizePolicy(sizePolicy)
        self.AutoSet.setObjectName("AutoSet")
        self.gridLayout_4.addWidget(self.AutoSet, 2, 0, 1, 1)
        self.AutoSetReminder = QtWidgets.QLabel(self.groupBox_3)
        self.AutoSetReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.AutoSetReminder.setObjectName("AutoSetReminder")
        self.gridLayout_4.addWidget(self.AutoSetReminder, 1, 0, 1, 1)
        self.StartChunk = MyLineWidget(self.groupBox_3)
        self.StartChunk.setObjectName("StartChunk")
        self.gridLayout_4.addWidget(self.StartChunk, 2, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_4.addWidget(self.label_3, 1, 4, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 1, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_4.addWidget(self.label_2, 1, 1, 1, 1)
        self.StartCntFrame = MyLineWidget(self.groupBox_3)
        self.StartCntFrame.setObjectName("StartCntFrame")
        self.gridLayout_4.addWidget(self.StartCntFrame, 2, 4, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox_3, 0, 0, 1, 1)
        self.DebugChecker = QtWidgets.QCheckBox(self.step2)
        self.DebugChecker.setObjectName("DebugChecker")
        self.gridLayout_11.addWidget(self.DebugChecker, 11, 0, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setObjectName("label_4")
        self.gridLayout_15.addWidget(self.label_4, 1, 3, 1, 1)
        self.DupFramesTSelector = QtWidgets.QDoubleSpinBox(self.groupBox_2)
        self.DupFramesTSelector.setMinimum(1.0)
        self.DupFramesTSelector.setMaximum(5.0)
        self.DupFramesTSelector.setObjectName("DupFramesTSelector")
        self.gridLayout_15.addWidget(self.DupFramesTSelector, 1, 4, 1, 1)
        self.ScdetSelector = QtWidgets.QSpinBox(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ScdetSelector.sizePolicy().hasHeightForWidth())
        self.ScdetSelector.setSizePolicy(sizePolicy)
        self.ScdetSelector.setMinimum(10)
        self.ScdetSelector.setProperty("value", 30)
        self.ScdetSelector.setObjectName("ScdetSelector")
        self.gridLayout_15.addWidget(self.ScdetSelector, 1, 1, 1, 1)
        self.ScdetReminder = QtWidgets.QLabel(self.groupBox_2)
        self.ScdetReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ScdetReminder.setObjectName("ScdetReminder")
        self.gridLayout_15.addWidget(self.ScdetReminder, 1, 0, 1, 1)
        self.CloseScedetChecker = QtWidgets.QCheckBox(self.groupBox_2)
        self.CloseScedetChecker.setObjectName("CloseScedetChecker")
        self.gridLayout_15.addWidget(self.CloseScedetChecker, 0, 0, 1, 1)
        self.DupRmChecker = QtWidgets.QCheckBox(self.groupBox_2)
        self.DupRmChecker.setObjectName("DupRmChecker")
        self.gridLayout_15.addWidget(self.DupRmChecker, 0, 3, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_15, 0, 0, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox_2, 1, 0, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.UseCRF = QtWidgets.QRadioButton(self.groupBox)
        self.UseCRF.setChecked(True)
        self.UseCRF.setObjectName("UseCRF")
        self.gridLayout_3.addWidget(self.UseCRF, 0, 0, 1, 1)
        self.BitrateSelector = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.BitrateSelector.setProperty("value", 90.0)
        self.BitrateSelector.setObjectName("BitrateSelector")
        self.gridLayout_3.addWidget(self.BitrateSelector, 0, 3, 1, 1)
        self.UseTargetBitrate = QtWidgets.QRadioButton(self.groupBox)
        self.UseTargetBitrate.setObjectName("UseTargetBitrate")
        self.gridLayout_3.addWidget(self.UseTargetBitrate, 0, 2, 1, 1)
        self.CRFSelector = QtWidgets.QSpinBox(self.groupBox)
        self.CRFSelector.setMinimum(0)
        self.CRFSelector.setMaximum(51)
        self.CRFSelector.setProperty("value", 9)
        self.CRFSelector.setObjectName("CRFSelector")
        self.gridLayout_3.addWidget(self.CRFSelector, 0, 1, 1, 1)
        self.TargetBitrateMeasure = QtWidgets.QLabel(self.groupBox)
        self.TargetBitrateMeasure.setObjectName("TargetBitrateMeasure")
        self.gridLayout_3.addWidget(self.TargetBitrateMeasure, 0, 4, 1, 1)
        self.HwaccelChecker = QtWidgets.QCheckBox(self.groupBox)
        self.HwaccelChecker.setObjectName("HwaccelChecker")
        self.gridLayout_3.addWidget(self.HwaccelChecker, 0, 8, 1, 1)
        self.gridLayout_12.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setObjectName("label_9")
        self.gridLayout_12.addWidget(self.label_9, 2, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.EncoderReminder = QtWidgets.QLabel(self.groupBox)
        self.EncoderReminder.setObjectName("EncoderReminder")
        self.horizontalLayout_4.addWidget(self.EncoderReminder)
        self.EncoderSelector = QtWidgets.QComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EncoderSelector.sizePolicy().hasHeightForWidth())
        self.EncoderSelector.setSizePolicy(sizePolicy)
        self.EncoderSelector.setObjectName("EncoderSelector")
        self.EncoderSelector.addItem("")
        self.EncoderSelector.addItem("")
        self.EncoderSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.EncoderSelector)
        self.PresetReminder = QtWidgets.QLabel(self.groupBox)
        self.PresetReminder.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.PresetReminder.setObjectName("PresetReminder")
        self.horizontalLayout_4.addWidget(self.PresetReminder)
        self.PresetSelector = QtWidgets.QComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PresetSelector.sizePolicy().hasHeightForWidth())
        self.PresetSelector.setSizePolicy(sizePolicy)
        self.PresetSelector.setObjectName("PresetSelector")
        self.PresetSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.PresetSelector)
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_4.addWidget(self.label_8)
        self.PixFmtSelector = QtWidgets.QComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PixFmtSelector.sizePolicy().hasHeightForWidth())
        self.PixFmtSelector.setSizePolicy(sizePolicy)
        self.PixFmtSelector.setObjectName("PixFmtSelector")
        self.PixFmtSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.PixFmtSelector)
        self.gridLayout_12.addLayout(self.horizontalLayout_4, 1, 0, 1, 1)
        self.FFmpegCustomer = MyLineWidget(self.groupBox)
        self.FFmpegCustomer.setObjectName("FFmpegCustomer")
        self.gridLayout_12.addWidget(self.FFmpegCustomer, 3, 0, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox, 3, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.step2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_11.addWidget(self.line_2, 7, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.step2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_11.addWidget(self.line, 9, 0, 1, 1)
        self.groupBox_5 = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_5.sizePolicy().hasHeightForWidth())
        self.groupBox_5.setSizePolicy(sizePolicy)
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.OutputOnlyChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.OutputOnlyChecker.setChecked(True)
        self.OutputOnlyChecker.setObjectName("OutputOnlyChecker")
        self.gridLayout_21.addWidget(self.OutputOnlyChecker, 1, 1, 1, 1)
        self.QuickExtractChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.QuickExtractChecker.setChecked(True)
        self.QuickExtractChecker.setObjectName("QuickExtractChecker")
        self.gridLayout_21.addWidget(self.QuickExtractChecker, 0, 2, 1, 1)
        self.ImgOutputChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.ImgOutputChecker.setObjectName("ImgOutputChecker")
        self.gridLayout_21.addWidget(self.ImgOutputChecker, 0, 1, 1, 1)
        self.ImgInputChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.ImgInputChecker.setObjectName("ImgInputChecker")
        self.gridLayout_21.addWidget(self.ImgInputChecker, 0, 0, 1, 1)
        self.NoConcatChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.NoConcatChecker.setObjectName("NoConcatChecker")
        self.gridLayout_21.addWidget(self.NoConcatChecker, 1, 0, 1, 1)
        self.SaveAudioChecker = QtWidgets.QCheckBox(self.groupBox_5)
        self.SaveAudioChecker.setChecked(True)
        self.SaveAudioChecker.setObjectName("SaveAudioChecker")
        self.gridLayout_21.addWidget(self.SaveAudioChecker, 1, 2, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox_5, 8, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.CropSettings = MyLineWidget(self.groupBox_4)
        self.CropSettings.setObjectName("CropSettings")
        self.gridLayout_5.addWidget(self.CropSettings, 0, 5, 1, 1)
        self.ResizeSettings = MyLineWidget(self.groupBox_4)
        self.ResizeSettings.setObjectName("ResizeSettings")
        self.gridLayout_5.addWidget(self.ResizeSettings, 0, 3, 1, 1)
        self.ResizeReminder = QtWidgets.QLabel(self.groupBox_4)
        self.ResizeReminder.setObjectName("ResizeReminder")
        self.gridLayout_5.addWidget(self.ResizeReminder, 0, 2, 1, 1)
        self.CropReminder = QtWidgets.QLabel(self.groupBox_4)
        self.CropReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.CropReminder.setObjectName("CropReminder")
        self.gridLayout_5.addWidget(self.CropReminder, 0, 4, 1, 1)
        self.gridLayout_20.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox_4, 2, 0, 1, 1)
        self.groupBox_6 = QtWidgets.QGroupBox(self.step2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_6.sizePolicy().hasHeightForWidth())
        self.groupBox_6.setSizePolicy(sizePolicy)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.AMDParametersReminder = QtWidgets.QLabel(self.groupBox_6)
        self.AMDParametersReminder.setObjectName("AMDParametersReminder")
        self.gridLayout_22.addWidget(self.AMDParametersReminder, 1, 0, 1, 1)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.InterpScaleReminder = QtWidgets.QLabel(self.groupBox_6)
        self.InterpScaleReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.InterpScaleReminder.setObjectName("InterpScaleReminder")
        self.gridLayout_7.addWidget(self.InterpScaleReminder, 2, 0, 1, 1)
        self.ModuleSelector = QtWidgets.QComboBox(self.groupBox_6)
        self.ModuleSelector.setObjectName("ModuleSelector")
        self.gridLayout_7.addWidget(self.ModuleSelector, 3, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox_6)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_7.addWidget(self.label_5, 3, 0, 1, 1)
        self.FP16Checker = QtWidgets.QCheckBox(self.groupBox_6)
        self.FP16Checker.setAcceptDrops(True)
        self.FP16Checker.setObjectName("FP16Checker")
        self.gridLayout_7.addWidget(self.FP16Checker, 1, 0, 1, 1)
        self.ReverseChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.ReverseChecker.setObjectName("ReverseChecker")
        self.gridLayout_7.addWidget(self.ReverseChecker, 1, 1, 1, 1)
        self.UseCUDAButton = QtWidgets.QRadioButton(self.groupBox_6)
        self.UseCUDAButton.setChecked(True)
        self.UseCUDAButton.setObjectName("UseCUDAButton")
        self.gridLayout_7.addWidget(self.UseCUDAButton, 1, 4, 1, 1)
        self.InterpScaleSelector = QtWidgets.QComboBox(self.groupBox_6)
        self.InterpScaleSelector.setObjectName("InterpScaleSelector")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.gridLayout_7.addWidget(self.InterpScaleSelector, 2, 1, 1, 1)
        self.UseNCNNButton = QtWidgets.QRadioButton(self.groupBox_6)
        self.UseNCNNButton.setCheckable(True)
        self.UseNCNNButton.setChecked(False)
        self.UseNCNNButton.setObjectName("UseNCNNButton")
        self.gridLayout_7.addWidget(self.UseNCNNButton, 1, 5, 1, 1)
        self.UseMultiCUDAButton = QtWidgets.QRadioButton(self.groupBox_6)
        self.UseMultiCUDAButton.setCheckable(False)
        self.UseMultiCUDAButton.setObjectName("UseMultiCUDAButton")
        self.gridLayout_7.addWidget(self.UseMultiCUDAButton, 1, 6, 1, 1)
        self.UseCPUButton = QtWidgets.QRadioButton(self.groupBox_6)
        self.UseCPUButton.setCheckable(False)
        self.UseCPUButton.setChecked(False)
        self.UseCPUButton.setObjectName("UseCPUButton")
        self.gridLayout_7.addWidget(self.UseCPUButton, 1, 7, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox_6)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_7.addWidget(self.label_6, 2, 4, 1, 4)
        self.DiscreteCardSelector = QtWidgets.QComboBox(self.groupBox_6)
        self.DiscreteCardSelector.setObjectName("DiscreteCardSelector")
        self.gridLayout_7.addWidget(self.DiscreteCardSelector, 3, 4, 1, 4)
        self.gridLayout_22.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        self.j_settings = MyLineWidget(self.groupBox_6)
        self.j_settings.setObjectName("j_settings")
        self.gridLayout_22.addWidget(self.j_settings, 2, 0, 1, 1)
        self.gridLayout_11.addWidget(self.groupBox_6, 10, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_11, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step2, "")
        self.step3 = QtWidgets.QWidget()
        self.step3.setAcceptDrops(True)
        self.step3.setWhatsThis("")
        self.step3.setObjectName("step3")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.step3)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.OptionCheck = MyTextWidget(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OptionCheck.sizePolicy().hasHeightForWidth())
        self.OptionCheck.setSizePolicy(sizePolicy)
        self.OptionCheck.setAutoFormatting(MyTextWidget.AutoAll)
        self.OptionCheck.setReadOnly(True)
        self.OptionCheck.setObjectName("OptionCheck")
        self.gridLayout_8.addWidget(self.OptionCheck, 0, 0, 2, 2)
        self.progressBar = QtWidgets.QProgressBar(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMaximum(100)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout_8.addWidget(self.progressBar, 2, 0, 1, 1)
        self.KillProcButton = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KillProcButton.sizePolicy().hasHeightForWidth())
        self.KillProcButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(20)
        self.KillProcButton.setFont(font)
        self.KillProcButton.setObjectName("KillProcButton")
        self.gridLayout_8.addWidget(self.KillProcButton, 4, 0, 1, 1)
        self.ProcessStart = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ProcessStart.sizePolicy().hasHeightForWidth())
        self.ProcessStart.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(20)
        self.ProcessStart.setFont(font)
        self.ProcessStart.setObjectName("ProcessStart")
        self.gridLayout_8.addWidget(self.ProcessStart, 3, 0, 1, 1)
        self.gridLayout_24.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step3, "")
        self.step_optional = QtWidgets.QWidget()
        self.step_optional.setObjectName("step_optional")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.step_optional)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.gridLayout_16 = QtWidgets.QGridLayout()
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.GifMaker = QtWidgets.QGroupBox(self.step_optional)
        self.GifMaker.setObjectName("GifMaker")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.GifMaker)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.GifInput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifInput.sizePolicy().hasHeightForWidth())
        self.GifInput.setSizePolicy(sizePolicy)
        self.GifInput.setDragEnabled(True)
        self.GifInput.setObjectName("GifInput")
        self.gridLayout_25.addWidget(self.GifInput, 0, 0, 1, 1)
        self.GifOutput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifOutput.sizePolicy().hasHeightForWidth())
        self.GifOutput.setSizePolicy(sizePolicy)
        self.GifOutput.setDragEnabled(True)
        self.GifOutput.setObjectName("GifOutput")
        self.gridLayout_25.addWidget(self.GifOutput, 1, 0, 1, 1)
        self.GifButton = QtWidgets.QPushButton(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifButton.sizePolicy().hasHeightForWidth())
        self.GifButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(12)
        self.GifButton.setFont(font)
        self.GifButton.setObjectName("GifButton")
        self.gridLayout_25.addWidget(self.GifButton, 2, 0, 1, 1)
        self.gridLayout_16.addWidget(self.GifMaker, 0, 0, 1, 1)
        self.VAConcat = QtWidgets.QGroupBox(self.step_optional)
        self.VAConcat.setObjectName("VAConcat")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.VAConcat)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.gridLayout_17 = QtWidgets.QGridLayout()
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.ConcatInputV = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputV.sizePolicy().hasHeightForWidth())
        self.ConcatInputV.setSizePolicy(sizePolicy)
        self.ConcatInputV.setDragEnabled(True)
        self.ConcatInputV.setObjectName("ConcatInputV")
        self.verticalLayout.addWidget(self.ConcatInputV)
        self.ConcatInputA = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputA.sizePolicy().hasHeightForWidth())
        self.ConcatInputA.setSizePolicy(sizePolicy)
        self.ConcatInputA.setDragEnabled(True)
        self.ConcatInputA.setObjectName("ConcatInputA")
        self.verticalLayout.addWidget(self.ConcatInputA)
        self.OutputConcat = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputConcat.sizePolicy().hasHeightForWidth())
        self.OutputConcat.setSizePolicy(sizePolicy)
        self.OutputConcat.setDragEnabled(True)
        self.OutputConcat.setObjectName("OutputConcat")
        self.verticalLayout.addWidget(self.OutputConcat)
        self.gridLayout_17.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.gridLayout_26.addLayout(self.gridLayout_17, 0, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ConcatButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatButton.sizePolicy().hasHeightForWidth())
        self.ConcatButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(12)
        self.ConcatButton.setFont(font)
        self.ConcatButton.setObjectName("ConcatButton")
        self.horizontalLayout_2.addWidget(self.ConcatButton)
        self.ConcatAllButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatAllButton.sizePolicy().hasHeightForWidth())
        self.ConcatAllButton.setSizePolicy(sizePolicy)
        self.ConcatAllButton.setObjectName("ConcatAllButton")
        self.horizontalLayout_2.addWidget(self.ConcatAllButton)
        self.gridLayout_26.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.gridLayout_16.addWidget(self.VAConcat, 1, 0, 1, 1)
        self.gridLayout_19.addLayout(self.gridLayout_16, 0, 0, 1, 1)
        self.SubBurn = QtWidgets.QGroupBox(self.step_optional)
        self.SubBurn.setObjectName("SubBurn")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.SubBurn)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.SubInputV = MyLineWidget(self.SubBurn)
        self.SubInputV.setDragEnabled(True)
        self.SubInputV.setObjectName("SubInputV")
        self.verticalLayout_2.addWidget(self.SubInputV)
        self.SubInputAss = MyLineWidget(self.SubBurn)
        self.SubInputAss.setDragEnabled(True)
        self.SubInputAss.setObjectName("SubInputAss")
        self.verticalLayout_2.addWidget(self.SubInputAss)
        self.SubOutput = MyLineWidget(self.SubBurn)
        self.SubOutput.setDragEnabled(True)
        self.SubOutput.setObjectName("SubOutput")
        self.verticalLayout_2.addWidget(self.SubOutput)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.gridLayout_10.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.SubBurnButton = QtWidgets.QPushButton(self.SubBurn)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SubBurnButton.sizePolicy().hasHeightForWidth())
        self.SubBurnButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(12)
        self.SubBurnButton.setFont(font)
        self.SubBurnButton.setObjectName("SubBurnButton")
        self.gridLayout_10.addWidget(self.SubBurnButton, 1, 0, 1, 1)
        self.gridLayout_19.addWidget(self.SubBurn, 1, 0, 1, 1)
        self.tabWidget.addTab(self.step_optional, "")
        self.gridLayout_18.addWidget(self.tabWidget, 3, 0, 1, 1)
        self.CloseButton = QtWidgets.QPushButton(self.MainFrame)
        self.CloseButton.setObjectName("CloseButton")
        self.gridLayout_18.addWidget(self.CloseButton, 4, 0, 1, 1)
        self.gridLayout_23.addWidget(self.MainFrame, 0, 0, 1, 1)

        self.retranslateUi(RIFEDialog)
        self.tabWidget.setCurrentIndex(0)
        self.CloseButton.clicked.connect(RIFEDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(RIFEDialog)
        RIFEDialog.setTabOrder(self.OutputFolder, self.ExpSelecter)
        RIFEDialog.setTabOrder(self.ExpSelecter, self.CRFSelector)
        RIFEDialog.setTabOrder(self.CRFSelector, self.StartFrame)
        RIFEDialog.setTabOrder(self.StartFrame, self.StartCntFrame)
        RIFEDialog.setTabOrder(self.StartCntFrame, self.DebugChecker)
        RIFEDialog.setTabOrder(self.DebugChecker, self.OptionCheck)
        RIFEDialog.setTabOrder(self.OptionCheck, self.CloseButton)

    def retranslateUi(self, RIFEDialog):
        _translate = QtCore.QCoreApplication.translate
        RIFEDialog.setWindowTitle(_translate("RIFEDialog", "快速补帧"))
        self.OutputFolder.setPlaceholderText(_translate("RIFEDialog", "拖入补帧项目输出的文件夹路径（对于4K补帧，剩余空间建议20G+）批处理模式下，\"仅保留输出文件\"模式将被强制启用（会删除所有中间文件，且不支持\"输出图片序列功能\"）"))
        self.label_7.setText(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">补帧前请仔细阅读此页说明。继续操作即代表您已预先清楚本应用程序的使用范围、本软件与使用者的责任分属，并愿意承担补帧过程可能造成的相关风险（包括但不限于显卡损伤、由于用户不恰当行为导致的程序错误等）</span></p><p><span style=\" font-size:12pt; font-weight:600;\">如不同意上述及下列条例，</span><span style=\" font-size:12pt; font-weight:600; color:#ff0000;\">请直接点击右上角关闭软件</span></p><p><span style=\" font-size:12pt; color:#000000;\">在</span><span style=\" font-size:12pt; font-weight:600; color:#000000;\">输出窗口</span><span style=\" font-size:12pt; color:#000000;\">页面，不同颜色字体意义如下：</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">红色代表程序遇到错误，请截图并联系开发团队</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ffaa00;\">橙色表示警告，代表视频导出可能有问题</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#00aa00;\">绿色标志当前任务完成，将执行下一次任务</span></p><p><span style=\" font-size:12pt; font-weight:600;\">快速补帧流程：</span></p><p>1. 选择要补帧的文件</p><p>2. 确认<span style=\" font-weight:600;\">输入和输出</span>帧率</p><p>3. 按“<span style=\" font-weight:600;\">一键补帧</span>”完成补帧操作（不支持慢动作，慢动作需要手动在<span style=\" font-weight:600;\">高级设置</span>界面设置）</p><p>4. 可以在<span style=\" font-weight:600;\">工具箱</span>一页进行<span style=\" font-weight:600;\">gif制作</span>、<span style=\" font-weight:600;\">音视频合并</span>及<span style=\" font-weight:600;\">已有区块合并</span></p><p><span style=\" font-size:12pt; font-weight:600;\">注意事项：</span></p><p>0. A卡补帧一定要去高级设置界面手动设置</p><p>1. 使用<span style=\" font-weight:600;\">一键补帧</span>的，参数将全自动设置。如有更高定制需要，请前往“<span style=\" font-weight:600;\">高级设置</span>”进一步设置</p><p>2. 批处理补帧说明：</p><p>2.1 对于每一批次的补帧，所有补帧设置相同。拖入要补帧的文件后，<span style=\" font-weight:600;\">请先点击任意条目以获得输入帧率，并确认输入帧率和输出帧率，如发现输入帧率或输出帧率错误，请手动调整。</span>由于帧率设置导致导出问题的情况，本团队概不负责。</p><p>2.2 对于<span style=\" font-weight:600;\">一小时</span>以上的补帧操作，未先行联系开发团队而发生由于程序或设置错误导致补帧失败或导出成品有问题情况的，本团队概不负责。</p><p>3. 鼠标在每一选项上悬浮可获得相关帮助信息，第一次使用必看！</p><p>4. <span style=\" font-weight:600;\">FAQ</span>：</p><p>4.1 遇到<span style=\" font-weight:600;\">CUDA Out of Memory</span>错误，请尝试勾选Step2的低显存模式。如该错误重复出现，请尝试在<span style=\" font-weight:600;\">Step2</span>输出视频分辨率处按照要求填写分辨率较小的值（如对1080p视频补帧，填960x720以降到720p输出）</p><p>4.2 遇到其他错误，请将<span style=\" font-weight:600;\">“基础设置”“高级设置”和命令行窗口</span>运行结果截图前往Q群264023742洽询</p><p><span style=\" font-weight:600; font-style:italic;\">软件最终解释权归SVFI开发团队所有</span></p></body></html>"))
        self.InputButton.setText(_translate("RIFEDialog", "点我以设置输入文件（支持批处理）"))
        self.OutputButton.setText(_translate("RIFEDialog", "点我以设置输出文件夹"))
        self.AllInOne.setText(_translate("RIFEDialog", "一键补帧(不支持慢动作)"))
        self.InputFPSReminder.setText(_translate("RIFEDialog", "输入视频帧率："))
        self.InputFPS.setPlaceholderText(_translate("RIFEDialog", "一定要确认输入帧率！"))
        self.InterpExpReminder.setText(_translate("RIFEDialog", "选择补帧倍率："))
        self.ExpSelecter.setItemText(0, _translate("RIFEDialog", "x2"))
        self.ExpSelecter.setItemText(1, _translate("RIFEDialog", "x4"))
        self.ExpSelecter.setItemText(2, _translate("RIFEDialog", "x8"))
        self.ExpSelecter.setItemText(3, _translate("RIFEDialog", "x16"))
        self.ExpSelecter.setItemText(4, _translate("RIFEDialog", "x32"))
        self.ExpSelecter.setItemText(5, _translate("RIFEDialog", "x64"))
        self.OutputFPSReminder.setText(_translate("RIFEDialog", "输出帧率："))
        self.OutputFPS.setPlaceholderText(_translate("RIFEDialog", "一定要确认输出帧率"))
        self.slowmotion.setText(_translate("RIFEDialog", "慢动作（要求输出帧率小于补帧帧率）"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step1), _translate("RIFEDialog", "基础设置"))
        self.groupBox_3.setTitle(_translate("RIFEDialog", "第一步：补帧状态恢复"))
        self.StartFrame.setPlaceholderText(_translate("RIFEDialog", "起始帧数(startframe)"))
        self.AutoSet.setText(_translate("RIFEDialog", "点我就完事了"))
        self.AutoSetReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>根据已经生成的视频块信息进行推算，可能存在重复补帧的情况，但不影响最终结果</p></body></html>"))
        self.AutoSetReminder.setText(_translate("RIFEDialog", "自动设置"))
        self.StartChunk.setPlaceholderText(_translate("RIFEDialog", "起始块数(chunk)"))
        self.label_3.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>假定程序补到原视频的256帧被终止，补帧倍率为x4，则会生成256 * 4 = <span style=\" font-weight:600;\">1024</span>张图片，那么这里要指定1025</p></body></html>"))
        self.label_3.setText(_translate("RIFEDialog", "补帧序列起始帧数："))
        self.label.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>假如程序补到原视频的第256帧即被终止，那么这里应该指定257</p></body></html>"))
        self.label.setText(_translate("RIFEDialog", "原视频起始帧数："))
        self.label_2.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>起始补帧生成的视频块chunk的编号</p></body></html>"))
        self.label_2.setText(_translate("RIFEDialog", "起始视频块序列数："))
        self.StartCntFrame.setPlaceholderText(_translate("RIFEDialog", "补帧序列起始帧数"))
        self.DebugChecker.setText(_translate("RIFEDialog", "Debug"))
        self.groupBox_2.setTitle(_translate("RIFEDialog", "第二步：转场与重复帧识别参数设置"))
        self.label_4.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>删除并补足素材出现的<span style=\" font-weight:600;\">重复帧</span>， 只推荐对10s以上的<span style=\" font-weight:600;\">纯片段</span>（非长片）使用，有音画不同步风险，</p><p>该取值推荐<span style=\" font-weight:600;\">0.1~4</span></p></body></html>"))
        self.label_4.setText(_translate("RIFEDialog", "   重复帧识别阈值（越低越灵敏）"))
        self.ScdetReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">建议取值25~60</span></p><p>3D素材（有景深的画面）选20~30</p><p>2D素材（平面，如2D动画）选20以下</p></body></html>"))
        self.ScdetReminder.setText(_translate("RIFEDialog", "转场识别阈值（越低越灵敏）"))
        self.CloseScedetChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>在拆帧过程中去除<span style=\" font-weight:600;\">一拍二、一拍三</span>等作品的重复帧以使最终成品流畅性更佳</p><p>最高支持一拍八的作品</p><p>拆帧过程速度会下降20%</p><p>最终导出画质可能会有所下降</p></body></html>"))
        self.CloseScedetChecker.setText(_translate("RIFEDialog", "关闭转场识别"))
        self.DupRmChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>在拆帧过程中去除<span style=\" font-weight:600;\">一拍二、一拍三</span>等作品的重复帧以使最终成品流畅性更佳</p><p>最高支持一拍八的作品</p><p>拆帧过程速度会下降20%</p><p>最终导出画质可能会有所下降</p><p><span style=\" font-weight:600;\">只推荐片段补帧，有导出结果音画不同步风险</span></p></body></html>"))
        self.DupRmChecker.setText(_translate("RIFEDialog", "开启重复帧优化(仅支持N卡，仅用于20s内的片段)"))
        self.groupBox.setTitle(_translate("RIFEDialog", "第四步：压制参数设置（CRF和目标码率二选一）"))
        self.UseCRF.setText(_translate("RIFEDialog", "渲染质量(CRF)："))
        self.UseTargetBitrate.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>目标码率，1pass下不代表实际码率</p></body></html>"))
        self.UseTargetBitrate.setText(_translate("RIFEDialog", " 目标码率（VBR）："))
        self.TargetBitrateMeasure.setText(_translate("RIFEDialog", "M "))
        self.HwaccelChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>使用<span style=\" font-weight:600;\">ffmpeg</span>的hevc_nvenc或h264_nvenc编码器压制中间产品及成品</p></body></html>"))
        self.HwaccelChecker.setText(_translate("RIFEDialog", "使用硬件编码"))
        self.label_9.setText(_translate("RIFEDialog", "自定义压制参数："))
        self.EncoderReminder.setText(_translate("RIFEDialog", "  先选择压制编码： "))
        self.EncoderSelector.setItemText(0, _translate("RIFEDialog", "HEVC"))
        self.EncoderSelector.setItemText(1, _translate("RIFEDialog", "H264"))
        self.EncoderSelector.setItemText(2, _translate("RIFEDialog", "ProRes"))
        self.PresetReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>硬编：GPU压制，只有勾选硬件编码才能使用</p><p>软编：CPU压制，速度慢，但是质量可能比硬件编码好一丢丢（虽然大量的SSIM对比实验结果表面当今硬件编码质量与CPU编码不分伯仲）</p><p><br/></p><p><span style=\" font-weight:600;\">注意：软编可以直接压入HDR10数据，现阶段的硬编不行</span></p></body></html>"))
        self.PresetReminder.setText(_translate("RIFEDialog", "  再选择压制预设："))
        self.PresetSelector.setCurrentText(_translate("RIFEDialog", "slow"))
        self.PresetSelector.setItemText(0, _translate("RIFEDialog", "slow"))
        self.label_8.setText(_translate("RIFEDialog", " 再选择像素格式："))
        self.PixFmtSelector.setItemText(0, _translate("RIFEDialog", "yuv420p"))
        self.FFmpegCustomer.setPlaceholderText(_translate("RIFEDialog", "用于ffmpeg的压制参数，会替换上面的"))
        self.groupBox_5.setTitle(_translate("RIFEDialog", "第五步：补帧工作流设置，可自由组合"))
        self.OutputOnlyChecker.setText(_translate("RIFEDialog", "仅保留输出（图片序列/视频）"))
        self.QuickExtractChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>使用ffmpeg内置视频导出图片算法，速度稍快，但可能出现颜色偏差</p></body></html>"))
        self.QuickExtractChecker.setText(_translate("RIFEDialog", "快速拆帧（避免偏色，不开启可能导致CUDA占用不满）"))
        self.ImgOutputChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>输出为图片序列</p><p><span style=\" font-weight:600;\">命名格式:0&gt;8d,如 00000008.png</span></p></body></html>"))
        self.ImgOutputChecker.setText(_translate("RIFEDialog", "输出为图片序列(不勾选则输出视频)"))
        self.ImgInputChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>输入为图片序列，</p><p>经过补帧后可生成图片序列或视频</p><p>按照默认排序方法排序（注意1、10、11、12...的情况，推荐前缀以0补齐的文件名序列，如000000、000001、000002等）</p></body></html>"))
        self.ImgInputChecker.setText(_translate("RIFEDialog", "输入为图片序列"))
        self.NoConcatChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>补帧大型项目时</p><p>若磁盘空间不足以放置所有分段的合并结果（即磁盘空间小于<span style=\" font-weight:600;\">所有chunk分段大小之和</span>的两倍），则可选择此项以便日后手动合并</p></body></html>"))
        self.NoConcatChecker.setText(_translate("RIFEDialog", "不进行视频区块合并（适用于磁盘空间不足的情况）"))
        self.SaveAudioChecker.setText(_translate("RIFEDialog", "导出带音频"))
        self.groupBox_4.setTitle(_translate("RIFEDialog", "第三步：先更改分辨率再裁切，鼠标悬浮可查看参数说明"))
        self.CropSettings.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>视频宽和高的黑边像素个数，如：0:138, 用英文冒号隔开，没有黑边就留空</p><p>注意，这里的像素取决于<span style=\" font-weight:600;\">输出文件分辨率</span></p></body></html>"))
        self.CropSettings.setPlaceholderText(_translate("RIFEDialog", "宽、高黑边像素个数，如0:138，没有就不填！"))
        self.ResizeSettings.setPlaceholderText(_translate("RIFEDialog", "如320x180,高不能为单数,如无需要不要填!!!!"))
        self.ResizeReminder.setText(_translate("RIFEDialog", "  1. 输出文件分辨率 "))
        self.CropReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>视频宽和高的黑边像素个数，如：0:138, 用英文冒号隔开，没有黑边就留空</p><p>注意，这里的像素取决于<span style=\" font-weight:600;\">输出文件分辨率</span></p></body></html>"))
        self.CropReminder.setText(_translate("RIFEDialog", "    2. 黑边参数    "))
        self.groupBox_6.setTitle(_translate("RIFEDialog", "第六步：RIFE补帧设置"))
        self.AMDParametersReminder.setText(_translate("RIFEDialog", "A卡补帧参数（需手动定制，请用鼠标在下方输入框上方悬浮以阅读说明）"))
        self.InterpScaleReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>对分辨率较小的素材进行补帧，这个值要拉大：<span style=\" font-weight:600;\">2.0~4.0</span></p><p>可减小对有大量花纹的画面补帧出现的坏帧情况</p><p>对4K视频补帧推荐取值<span style=\" font-weight:600;\">0.5</span></p></body></html>"))
        self.InterpScaleReminder.setText(_translate("RIFEDialog", "补帧精度倍数（值越低，速度越快）  "))
        self.label_5.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>默认情况下内置2.1~2.4四种模型</p><p><span style=\" font-weight:600;\">2.4</span>对2D素材做了专门优化</p><p><span style=\" font-weight:600;\">2.2~2.3</span>对3D素材处理较好</p></body></html>"))
        self.label_5.setText(_translate("RIFEDialog", "使用模型：（数字越大越新）"))
        self.FP16Checker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>处理高分辨率视频时，勾选此项可能会导致画面抖动</p></body></html>"))
        self.FP16Checker.setText(_translate("RIFEDialog", "半精度模式（显存不够就勾上，可能会画面抖动）"))
        self.ReverseChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>将前一张图片作为补帧的参考，即，<span style=\" font-weight:600;\">从后向前补</span>。</p><p>会比正向光流更流畅，但会严重影响3D动画补帧的高速运动的画面质量</p></body></html>"))
        self.ReverseChecker.setText(_translate("RIFEDialog", "反向光流"))
        self.UseCUDAButton.setText(_translate("RIFEDialog", "使用N卡（无则CPU）"))
        self.InterpScaleSelector.setCurrentText(_translate("RIFEDialog", "1.00"))
        self.InterpScaleSelector.setItemText(0, _translate("RIFEDialog", "1.00"))
        self.InterpScaleSelector.setItemText(1, _translate("RIFEDialog", "0.25"))
        self.InterpScaleSelector.setItemText(2, _translate("RIFEDialog", "0.50"))
        self.InterpScaleSelector.setItemText(3, _translate("RIFEDialog", "2.00"))
        self.InterpScaleSelector.setItemText(4, _translate("RIFEDialog", "4.00"))
        self.UseNCNNButton.setText(_translate("RIFEDialog", "使用A卡"))
        self.UseMultiCUDAButton.setText(_translate("RIFEDialog", "使用N卡多卡(X)"))
        self.UseCPUButton.setText(_translate("RIFEDialog", "使用CPU(X)"))
        self.label_6.setText(_translate("RIFEDialog", "调用的显卡：（如使用A卡请无视）"))
        self.j_settings.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">load/proc/save 三个参数</span></p><p>其中proc决定补帧速度，如果你有多个gpu，可以用“2，2，2”代表为第0个、第1个和第二个gpu建立2个、2个和2个补帧进程<br/></p><p>load表示读取图片的线程数，硬盘素质高的可以提高这个值，<span style=\" font-weight:600;\">不建议超过4</span></p><p>save表示保存图片的线程数，同上</p><p>一般的，如果发现显卡占用不够，可以提高proc的值</p></body></html>"))
        self.j_settings.setPlaceholderText(_translate("RIFEDialog", "线程数：读帧/补帧/存帧 (default=1:2:2) can be 1:2,2,2:2 for multi-gpu"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step2), _translate("RIFEDialog", "高级设置"))
        self.OptionCheck.setHtml(_translate("RIFEDialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.KillProcButton.setText(_translate("RIFEDialog", "强制结束补帧进程"))
        self.ProcessStart.setText(_translate("RIFEDialog", "开始补帧！"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step3), _translate("RIFEDialog", "输出窗口"))
        self.GifMaker.setTitle(_translate("RIFEDialog", "Gif制作"))
        self.GifInput.setPlaceholderText(_translate("RIFEDialog", "输入视频路径"))
        self.GifOutput.setPlaceholderText(_translate("RIFEDialog", "输出动图(gif)路径"))
        self.GifButton.setText(_translate("RIFEDialog", "  制作！  "))
        self.VAConcat.setTitle(_translate("RIFEDialog", "音视频合并"))
        self.ConcatInputV.setPlaceholderText(_translate("RIFEDialog", "输入视频路径"))
        self.ConcatInputA.setPlaceholderText(_translate("RIFEDialog", "输入音频路径（视频）"))
        self.OutputConcat.setPlaceholderText(_translate("RIFEDialog", "输出视频路径"))
        self.ConcatButton.setText(_translate("RIFEDialog", "  合并！  "))
        self.ConcatAllButton.setText(_translate("RIFEDialog", "合并已有区块"))
        self.SubBurn.setTitle(_translate("RIFEDialog", "烧制硬字幕（ASS）（开发中）"))
        self.SubInputV.setPlaceholderText(_translate("RIFEDialog", "输入视频路径"))
        self.SubInputAss.setPlaceholderText(_translate("RIFEDialog", "输入字幕路径"))
        self.SubOutput.setPlaceholderText(_translate("RIFEDialog", "输出视频路径"))
        self.SubBurnButton.setText(_translate("RIFEDialog", "  开烧！  "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step_optional), _translate("RIFEDialog", " 工具箱 "))
        self.CloseButton.setText(_translate("RIFEDialog", "保存设置并关闭"))
